<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The silence of winter </title>
    <link>http://tranhuucuong91.github.io/</link>
    <language>en-us</language>
    <author>Cuong Tran</author>
    <rights>(C) 2016</rights>
    <updated>2016-06-14 09:17:14 &#43;0700 ICT</updated>

    
      
        <item>
          <title>Getting started with Docker and PHP</title>
          <link>http://tranhuucuong91.github.io/post/getting-started-docker-and-php/</link>
          <pubDate>Tue, 14 Jun 2016 09:17:14 ICT</pubDate>
          <author>Cuong Tran</author>
          <guid>http://tranhuucuong91.github.io/post/getting-started-docker-and-php/</guid>
          <description>

&lt;p&gt;References: &lt;a href=&#34;http://www.newmediacampaigns.com/blog/docker-for-php-developers&#34;&gt;http://www.newmediacampaigns.com/blog/docker-for-php-developers&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-is-a-docker-container:3c549e4b0d832c70cfae9e6012022c7c&#34;&gt;What is a Docker Container?&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A container is a single service in a larger application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, assume we are building a PHP application. We need:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Web Server (e.g, nginx)&lt;/li&gt;
&lt;li&gt;Application Server (e.g, PHP-FPM)&lt;/li&gt;
&lt;li&gt;Database Server (e.g, MySQL)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our application has three distinct services.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each of these services can be separated into its own Docker container.&lt;/li&gt;
&lt;li&gt;Three containers are linked together.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have a complete application.&lt;/p&gt;

&lt;h1 id=&#34;what-is-a-docker-image:3c549e4b0d832c70cfae9e6012022c7c&#34;&gt;What is a Docker Image?&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Docker instance like a Object and Docker image like a Class.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just like a single PHP class can be used to instantiate many unique PHP objects, so too can Docker images to used to instantiate many unique Docker containers.&lt;/p&gt;

&lt;p&gt;For example, we can reuse a single PHP-FPM Docker image to instantiate many unique PHP-FPM containers for each of our applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to get Docker images?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Find and use Docker images on Docker Hubs &lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Build custom Docker images (if need).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why re-invent the wheel if someone has already built a Docker image that solves our problem?&lt;/p&gt;

&lt;h1 id=&#34;let-s-build-an-application:3c549e4b0d832c70cfae9e6012022c7c&#34;&gt;Let&amp;rsquo;s Build an Application&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Training:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to build a Docker image.&lt;/li&gt;
&lt;li&gt;How to run Docker containers.&lt;/li&gt;
&lt;li&gt;How to persist data with Docker volumes.&lt;/li&gt;
&lt;li&gt;How to aggregate container log output.&lt;/li&gt;
&lt;li&gt;How to manage related containers with Docker Compose.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Game:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install Docker.&lt;/li&gt;
&lt;li&gt;Build Nginx Docker Image. (step-by-step)&lt;/li&gt;
&lt;li&gt;Use PHP-FPM Docker Image.&lt;/li&gt;
&lt;li&gt;Use MySQL Docker Image.&lt;/li&gt;
&lt;li&gt;Application Setup.&lt;/li&gt;
&lt;li&gt;Config Nginx.&lt;/li&gt;
&lt;li&gt;Use Docker Compose.&lt;/li&gt;
&lt;li&gt;Docker logs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;(Cont.)&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Vagrant Cheatsheet</title>
          <link>http://tranhuucuong91.github.io/post/vagrant-cheatsheet/</link>
          <pubDate>Sun, 12 Jun 2016 01:49:40 ICT</pubDate>
          <author>Cuong Tran</author>
          <guid>http://tranhuucuong91.github.io/post/vagrant-cheatsheet/</guid>
          <description>

&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt; &lt;a href=&#34;https://gist.github.com/wpscholar/a49594e2e2b918f4d0c4&#34;&gt;https://gist.github.com/wpscholar/a49594e2e2b918f4d0c4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typing &lt;code&gt;vagrant&lt;/code&gt; from the command line will display a list of all available commands.&lt;/p&gt;

&lt;p&gt;Be sure that you are in the same directory as the Vagrantfile when running these commands!&lt;/p&gt;

&lt;h1 id=&#34;common-vagrant-commands:645d5c8f9a98e94b8a928bb0739779a6&#34;&gt;Common Vagrant Commands&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vagrant up&lt;/code&gt;          &amp;ndash; starts vagrant environment (also provisions only on the FIRST &lt;code&gt;vagrant up&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant status&lt;/code&gt;      &amp;ndash; outputs status of the vagrant machine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant halt&lt;/code&gt;        &amp;ndash; stops the vagrant machine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant reload&lt;/code&gt;      &amp;ndash; restarts vagrant machine, loads new Vagrantfile configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant provision&lt;/code&gt;   &amp;ndash; forces reprovisioning of the vagrant machine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant ssh&lt;/code&gt;         &amp;ndash; connects to machine via SSH&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant destroy&lt;/code&gt;     &amp;ndash; stops and deletes all traces of the vagrant machine&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;tips:645d5c8f9a98e94b8a928bb0739779a6&#34;&gt;Tips&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vagrant -v&lt;/code&gt;                    &amp;ndash; Get the vagrant version&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant global-status&lt;/code&gt;         &amp;ndash; outputs status of all vagrant machines&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant global-status --prune&lt;/code&gt; &amp;ndash; same as above, but prunes invalid entries&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant suspend&lt;/code&gt;               &amp;ndash; Suspends a virtual machine (remembers state)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant resume&lt;/code&gt;                &amp;ndash; Resume a suspended machine (vagrant up works just fine for this as well)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant reload --provision&lt;/code&gt;    &amp;ndash; Restart the virtual machine and force provisioning&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant provision --debug&lt;/code&gt;     &amp;ndash; Use the debug flag to increase the verbosity of the output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant push&lt;/code&gt;                  &amp;ndash; Yes, vagrant can be configured to &lt;a href=&#34;http://docs.vagrantup.com/v2/push/index.html&#34;&gt;deploy code&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant up --provision | tee provision.log&lt;/code&gt;  &amp;ndash; Runs &lt;code&gt;vagrant up&lt;/code&gt;, forces provisioning and logs all output to a file&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;notes:645d5c8f9a98e94b8a928bb0739779a6&#34;&gt;Notes&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;If you are using &lt;a href=&#34;https://github.com/varying-vagrant-vagrants/vvv/&#34;&gt;VVV&lt;/a&gt;, you can enable xdebug by running &lt;code&gt;vagrant ssh&lt;/code&gt; and then &lt;code&gt;xdebug_on&lt;/code&gt; from the virtual machine&amp;rsquo;s CLI.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Stratovarius - Forever</title>
          <link>http://tranhuucuong91.github.io/post/stratovarius-forever/</link>
          <pubDate>Sat, 11 Jun 2016 03:44:48 ICT</pubDate>
          <author>Cuong Tran</author>
          <guid>http://tranhuucuong91.github.io/post/stratovarius-forever/</guid>
          <description>&lt;p&gt;I stand alone in the darkness, &lt;br/&gt;
the winter of my life came so fast. &lt;br/&gt;
Memories go back to my childhood &lt;br/&gt;
to days I still recall. &lt;br/&gt;&lt;/p&gt;

&lt;p&gt;Oh how happy I was then, &lt;br/&gt;
there was no sorrow there was no pain. &lt;br/&gt;
Walking through the green fields, &lt;br/&gt;
sunshine in my eyes. &lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still there everywhere, &lt;br/&gt;
I&amp;rsquo;m the dust in the wind. &lt;br/&gt;
I&amp;rsquo;m the star in the northern sky. &lt;br/&gt;
I never stayed anywhere, &lt;br/&gt;
I&amp;rsquo;m the wind in the trees. &lt;br/&gt;
Would you wait for me forever? &lt;br/&gt;&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
